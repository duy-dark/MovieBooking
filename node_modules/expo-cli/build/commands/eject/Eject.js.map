{"version":3,"sources":["../../../src/commands/eject/Eject.ts"],"names":["clearNativeFolder","projectRoot","folders","step","CreateApp","logNewSection","join","Promise","all","map","folderName","fs","remove","path","succeed","error","fail","message","assertPlatforms","platforms","length","CommandError","ejectAsync","options","isWindows","process","platform","includes","log","warn","chalk","bold","newLine","results","prebuildAsync","logNextSteps","exp","pkg","ensureConfigAsync","tempDir","temporary","directory","hasNewProjectFiles","needsPodInstall","hasNewDependencies","createNativeProjectsFromTemplateAsync","shouldInstall","install","packageManager","resolvePackageManager","npm","yarn","installNodeDependenciesAsync","clean","applyingAndroidConfigStep","managedConfig","WarningAggregator","hasWarningsAndroid","hasWarningsIOS","stopAndPersist","symbol","text","red","podsInstalled","installCocoaPodsAsync","debug","warnIfDependenciesRequireAdditionalSetupAsync","sdkVersion","Object","keys","_internal","pluginHistory","nodeInstall","podInstall","legacyUpdates","hasAssetBundlePatterns","hasOwnProperty","nested","installCmd","dim","fallback","cleanJsDepsStep","installJsDepsStep","SilentError","copyPathsFromTemplate","templatePath","paths","copiedPaths","skippedPaths","targetPath","projectPath","existsSync","push","copySync","config","dynamicConfigPath","staticConfigPath","JsonFile","writeAsync","expo","json5","addNewLineIfNone","entryPoint","createFileHash","contents","crypto","createHash","update","digest","writeMetroConfig","updatingMetroConfigStep","sourceConfigPath","targetConfigPath","targetConfigPathExists","readFileSync","targetContents","Error","stop","clear","metro","e","yellow","validateBareTemplateExistsAsync","sdkMajorVersionNumber","semver","major","templateSpec","pacote","manifest","code","getPackageJson","read","updatePackageJSONScripts","scripts","start","ios","android","updatePackageJSONEntryPoint","removedPkgMain","shouldDeleteMainField","main","updatePackageJSONDependencies","devDependencies","dependencies","defaultDependencies","createDependenciesMap","defaultDevDependencies","combinedDependencies","requiredDependencies","dependenciesKey","dependencyVersion","combinedDevDependencies","hashForDependencyMap","hasNewDevDependencies","assign","updatePackageJSONAsync","updatingPackageJsonStep","writeFile","resolve","JSON","stringify","resolveBareEntryFile","isPkgMainExpoAppEntry","resolvedMainField","extensions","startsWith","normalizeDependencyMap","deps","dependency","sort","depsList","depsString","getTargetPaths","targetPaths","bareEntryFile","cloneNativeDirectoriesAsync","creatingNativeProjectStep","Exp","extractTemplateAppAsync","GitIgnore","mergeGitIgnorePaths","didMerge","didClear","depsResults","outputMap","key","value","appliedPlugins","expoPackagesWithExtraSetup","expoManagedPlugins","filter","plugin","reduce","prev","curr","pkgsWithExtraSetup","lte","packagesToWarn","pkgName","warnAdditionalSetupStep","plural","forEach","stripDashes","s","replace","input"],"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","sourcesContent":["import { ExpoConfig, getConfig, PackageJSONConfig } from '@expo/config';\nimport { ModPlatform, WarningAggregator } from '@expo/config-plugins';\nimport { getBareExtensions, getFileWithExtensions } from '@expo/config/paths';\nimport JsonFile, { JSONObject } from '@expo/json-file';\nimport { Exp } from '@expo/xdl';\nimport chalk from 'chalk';\nimport crypto from 'crypto';\nimport fs from 'fs-extra';\nimport npmPackageArg from 'npm-package-arg';\nimport pacote from 'pacote';\nimport path from 'path';\nimport semver from 'semver';\nimport temporary from 'tempy';\nimport terminalLink from 'terminal-link';\n\nimport CommandError, { SilentError } from '../../CommandError';\nimport log from '../../log';\nimport configureProjectAsync, { expoManagedPlugins } from '../apply/configureProjectAsync';\nimport * as CreateApp from '../utils/CreateApp';\nimport * as GitIgnore from '../utils/GitIgnore';\nimport { usesOldExpoUpdatesAsync } from '../utils/ProjectUtils';\nimport { learnMore } from '../utils/TerminalLink';\nimport { logConfigWarningsAndroid, logConfigWarningsIOS } from '../utils/logConfigWarnings';\nimport maybeBailOnGitStatusAsync from '../utils/maybeBailOnGitStatusAsync';\nimport { getOrPromptForBundleIdentifier, getOrPromptForPackage } from './ConfigValidation';\n\ntype DependenciesMap = { [key: string]: string | number };\n\nexport type EjectAsyncOptions = {\n  verbose?: boolean;\n  force?: boolean;\n  install?: boolean;\n  packageManager?: 'npm' | 'yarn';\n  platforms: ModPlatform[];\n};\n\ntype PrebuildResults = {\n  hasAssetBundlePatterns: boolean;\n  legacyUpdates: boolean;\n  hasNewProjectFiles: boolean;\n  platforms: ModPlatform[];\n  podInstall: boolean;\n  nodeInstall: boolean;\n  packageManager: string;\n};\n\nexport async function clearNativeFolder(projectRoot: string, folders: string[]) {\n  const step = CreateApp.logNewSection(`Clearing ${folders.join(', ')}`);\n  try {\n    await Promise.all(folders.map(folderName => fs.remove(path.join(projectRoot, folderName))));\n    step.succeed(`Cleared ${folders.join(', ')} code`);\n  } catch (error) {\n    step.fail(`Failed to delete ${folders.join(', ')} code: ${error.message}`);\n    throw error;\n  }\n}\n\nfunction assertPlatforms(platforms: EjectAsyncOptions['platforms']) {\n  if (!platforms?.length) {\n    throw new CommandError('At least one platform must be enabled when syncing');\n  }\n}\n\n/**\n * Entry point into the eject process, delegates to other helpers to perform various steps.\n *\n * 1. Verify git is clean\n * 2. Prebuild the project\n * 3. Log project info\n */\nexport async function ejectAsync(\n  projectRoot: string,\n  { platforms, ...options }: EjectAsyncOptions\n): Promise<void> {\n  assertPlatforms(platforms);\n  if (await maybeBailOnGitStatusAsync()) return;\n\n  const isWindows = process.platform === 'win32';\n  // Skip ejecting for iOS on Windows\n  if (isWindows && !platforms.includes('ios')) {\n    log.warn(\n      `⚠️  Skipping generating the iOS native project files. Run ${chalk.bold(\n        'expo eject'\n      )} again from macOS or Linux to generate the iOS project.`\n    );\n    log.newLine();\n  }\n\n  const results = await prebuildAsync(projectRoot, { platforms, ...options });\n  logNextSteps(results);\n}\n\n/**\n * Entry point into the prebuild process, delegates to other helpers to perform various steps.\n *\n * 1. Create native projects (ios, android)\n * 2. Install node modules\n * 3. Apply config to native projects\n * 4. Install CocoaPods\n */\nexport async function prebuildAsync(\n  projectRoot: string,\n  { platforms, ...options }: EjectAsyncOptions\n): Promise<PrebuildResults> {\n  assertPlatforms(platforms);\n\n  const { exp, pkg } = await ensureConfigAsync({ projectRoot, platforms });\n  const tempDir = temporary.directory();\n\n  const {\n    hasNewProjectFiles,\n    needsPodInstall,\n    hasNewDependencies,\n  } = await createNativeProjectsFromTemplateAsync({\n    projectRoot,\n    exp,\n    pkg,\n    tempDir,\n    platforms,\n  });\n\n  // Install node modules\n  const shouldInstall = options?.install !== false;\n\n  const packageManager = CreateApp.resolvePackageManager({\n    install: shouldInstall,\n    npm: options?.packageManager === 'npm',\n    yarn: options?.packageManager === 'yarn',\n  });\n\n  if (shouldInstall) {\n    await installNodeDependenciesAsync(projectRoot, packageManager, {\n      // We delete the dependencies when new ones are added because native packages are more fragile.\n      // npm doesn't work well so we always run the cleaning step when npm is used in favor of yarn.\n      clean: hasNewDependencies || packageManager === 'npm',\n    });\n  }\n\n  // Apply Expo config to native projects\n  const applyingAndroidConfigStep = CreateApp.logNewSection('Config syncing');\n  const managedConfig = await configureProjectAsync({\n    projectRoot,\n    platforms,\n  });\n  if (WarningAggregator.hasWarningsAndroid() || WarningAggregator.hasWarningsIOS()) {\n    applyingAndroidConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.red('Config synced with warnings that should be fixed:'),\n    });\n    logConfigWarningsAndroid();\n    logConfigWarningsIOS();\n  } else {\n    applyingAndroidConfigStep.succeed('Config synced');\n  }\n\n  // Install CocoaPods\n  let podsInstalled: boolean = false;\n  // err towards running pod install less because it's slow and users can easily run npx pod-install afterwards.\n  if (platforms.includes('ios') && shouldInstall && needsPodInstall) {\n    podsInstalled = await CreateApp.installCocoaPodsAsync(projectRoot);\n  } else {\n    log.debug('Skipped pod install');\n  }\n\n  await warnIfDependenciesRequireAdditionalSetupAsync(\n    pkg,\n    exp.sdkVersion,\n    Object.keys(managedConfig._internal?.pluginHistory ?? {})\n  );\n\n  return {\n    packageManager,\n    nodeInstall: options.install === false,\n    podInstall: !podsInstalled,\n    legacyUpdates: await usesOldExpoUpdatesAsync(projectRoot),\n    platforms,\n    hasNewProjectFiles,\n    hasAssetBundlePatterns: exp.hasOwnProperty('assetBundlePatterns'),\n  };\n}\n\nexport function logNextSteps({\n  hasAssetBundlePatterns,\n  hasNewProjectFiles,\n  legacyUpdates,\n  platforms,\n  podInstall,\n  nodeInstall,\n  packageManager,\n}: PrebuildResults) {\n  log.newLine();\n  log.nested(`➡️  ${chalk.bold('Next steps')}`);\n\n  if (WarningAggregator.hasWarningsIOS() || WarningAggregator.hasWarningsAndroid()) {\n    log.nested(\n      `\\u203A 👆 Review the logs above and look for any warnings (⚠️ ) that might need follow-up.`\n    );\n  }\n\n  // Log a warning about needing to install node modules\n  if (nodeInstall) {\n    const installCmd = packageManager === 'npm' ? 'npm install' : 'yarn';\n    log.nested(`\\u203A ⚠️  Install node modules: ${log.chalk.bold(installCmd)}`);\n  }\n  if (podInstall) {\n    log.nested(\n      `\\u203A 🍫 When CocoaPods is installed, initialize the project workspace: ${chalk.bold(\n        'npx pod-install'\n      )}`\n    );\n  }\n  log.nested(\n    `\\u203A 💡 You may want to run ${chalk.bold(\n      'npx @react-native-community/cli doctor'\n    )} to help install any tools that your app may need to run your native projects.`\n  );\n  log.nested(\n    `\\u203A 🔑 Download your Android keystore (if you're not sure if you need to, just run the command and see): ${chalk.bold(\n      'expo fetch:android:keystore'\n    )}`\n  );\n\n  if (hasAssetBundlePatterns) {\n    log.nested(\n      `\\u203A 📁 The property ${chalk.bold(\n        `assetBundlePatterns`\n      )} does not have the same effect in the bare workflow. ${log.chalk.dim(\n        learnMore('https://docs.expo.io/bare/updating-your-app/#embedding-assets')\n      )}`\n    );\n  }\n\n  if (legacyUpdates) {\n    log.nested(\n      `\\u203A 🚀 ${\n        (terminalLink(\n          'expo-updates',\n          'https://github.com/expo/expo/blob/master/packages/expo-updates/README.md'\n        ),\n        {\n          fallback: (text: string) => text,\n        })\n      } has been configured in your project. Before you do a release build, make sure you run ${chalk.bold(\n        'expo publish'\n      )}. ${log.chalk.dim(learnMore('https://expo.fyi/release-builds-with-expo-updates'))}`\n    );\n  }\n\n  if (hasNewProjectFiles) {\n    log.newLine();\n    log.nested(`☑️  ${chalk.bold('When you are ready to run your project')}`);\n    log.nested(\n      'To compile and run your project in development, execute one of the following commands:'\n    );\n\n    if (platforms.includes('ios')) {\n      log.nested(`\\u203A ${chalk.bold(packageManager === 'npm' ? 'npm run ios' : 'yarn ios')}`);\n    }\n\n    if (platforms.includes('android')) {\n      log.nested(\n        `\\u203A ${chalk.bold(packageManager === 'npm' ? 'npm run android' : 'yarn android')}`\n      );\n    }\n\n    log.nested(`\\u203A ${chalk.bold(packageManager === 'npm' ? 'npm run web' : 'yarn web')}`);\n  }\n}\n\n/**\n * Wraps PackageManager to install node modules and adds CLI logs.\n *\n * @param projectRoot\n */\nasync function installNodeDependenciesAsync(\n  projectRoot: string,\n  packageManager: 'yarn' | 'npm',\n  { clean = true }: { clean: boolean }\n) {\n  if (clean) {\n    // This step can take a couple seconds, if the installation logs are enabled (with EXPO_DEBUG) then it\n    // ends up looking odd to see \"Installing JavaScript dependencies\" for ~5 seconds before the logs start showing up.\n    const cleanJsDepsStep = CreateApp.logNewSection('Cleaning JavaScript dependencies.');\n    // nuke the node modules\n    // TODO: this is substantially slower, we should find a better alternative to ensuring the modules are installed.\n    await fs.remove('node_modules');\n    cleanJsDepsStep.succeed('Cleaned JavaScript dependencies.');\n  }\n\n  const installJsDepsStep = CreateApp.logNewSection('Installing JavaScript dependencies.');\n\n  try {\n    await CreateApp.installNodeDependenciesAsync(projectRoot, packageManager);\n    installJsDepsStep.succeed('Installed JavaScript dependencies.');\n  } catch {\n    const message = `Something went wrong installing JavaScript dependencies, check your ${packageManager} logfile or run ${chalk.bold(\n      `${packageManager} install`\n    )} again manually.`;\n    installJsDepsStep.fail(chalk.red(message));\n    // TODO: actually show the error message from the package manager! :O\n    throw new SilentError(message);\n  }\n}\n\nfunction copyPathsFromTemplate(\n  projectRoot: string,\n  templatePath: string,\n  paths: string[]\n): [string[], string[]] {\n  const copiedPaths = [];\n  const skippedPaths = [];\n  for (const targetPath of paths) {\n    const projectPath = path.join(projectRoot, targetPath);\n    if (!fs.existsSync(projectPath)) {\n      copiedPaths.push(targetPath);\n      fs.copySync(path.join(templatePath, targetPath), projectPath);\n    } else {\n      skippedPaths.push(targetPath);\n    }\n  }\n  return [copiedPaths, skippedPaths];\n}\n\nasync function ensureConfigAsync({\n  projectRoot,\n  platforms,\n}: {\n  projectRoot: string;\n  platforms: ModPlatform[];\n}): Promise<{ exp: ExpoConfig; pkg: PackageJSONConfig }> {\n  // We need the SDK version to proceed\n\n  let exp: ExpoConfig;\n  let pkg: PackageJSONConfig;\n  try {\n    const config = getConfig(projectRoot);\n    exp = config.exp;\n    pkg = config.pkg;\n\n    // If no config exists in the file system then we should generate one so the process doesn't fail.\n    if (!config.dynamicConfigPath && !config.staticConfigPath) {\n      // Don't check for a custom config path because the process should fail if a custom file doesn't exist.\n      // Write the generated config.\n      // writeConfigJsonAsync(projectRoot, config.exp);\n      await JsonFile.writeAsync(\n        // TODO: Write to app.config.json because it's easier to convert to a js config file.\n        path.join(projectRoot, 'app.json'),\n        { expo: (config.exp as unknown) as JSONObject },\n        { json5: false }\n      );\n    }\n  } catch (error) {\n    // TODO(Bacon): Currently this is already handled in the command\n    log.addNewLineIfNone();\n    throw new CommandError(`${error.message}\\n`);\n  }\n\n  // Prompt for the Android package first because it's more strict than the bundle identifier\n  // this means you'll have a better chance at matching the bundle identifier with the package name.\n  if (platforms.includes('android')) {\n    await getOrPromptForPackage(projectRoot);\n  }\n  if (platforms.includes('ios')) {\n    await getOrPromptForBundleIdentifier(projectRoot);\n  }\n\n  if (exp.entryPoint) {\n    delete exp.entryPoint;\n    log(`\\u203A expo.entryPoint is not needed and has been removed.`);\n  }\n\n  // Read config again because prompting for bundle id or package name may have mutated the results.\n  return getConfig(projectRoot);\n}\n\nfunction createFileHash(contents: string): string {\n  // this doesn't need to be secure, the shorter the better.\n  return crypto.createHash('sha1').update(contents).digest('hex');\n}\n\nfunction writeMetroConfig({\n  projectRoot,\n  pkg,\n  tempDir,\n}: {\n  projectRoot: string;\n  pkg: PackageJSONConfig;\n  tempDir: string;\n}) {\n  /**\n   * Add metro config, or warn if metro config already exists. The developer will need to add the\n   * hashAssetFiles plugin manually.\n   */\n\n  const updatingMetroConfigStep = CreateApp.logNewSection('Adding Metro bundler configuration');\n\n  try {\n    const sourceConfigPath = path.join(tempDir, 'metro.config.js');\n    const targetConfigPath = path.join(projectRoot, 'metro.config.js');\n    const targetConfigPathExists = fs.existsSync(targetConfigPath);\n    if (targetConfigPathExists) {\n      // Prevent re-runs from throwing an error if the metro config hasn't been modified.\n      const contents = createFileHash(fs.readFileSync(targetConfigPath, 'utf8'));\n      const targetContents = createFileHash(fs.readFileSync(sourceConfigPath, 'utf8'));\n      if (contents !== targetContents) {\n        throw new Error('Existing Metro configuration found; not overwriting.');\n      } else {\n        // Nothing to change, hide the step and exit.\n        updatingMetroConfigStep.stop();\n        updatingMetroConfigStep.clear();\n        return;\n      }\n    } else if (\n      fs.existsSync(path.join(projectRoot, 'metro.config.json')) ||\n      pkg.metro ||\n      fs.existsSync(path.join(projectRoot, 'rn-cli.config.js'))\n    ) {\n      throw new Error('Existing Metro configuration found; not overwriting.');\n    }\n\n    fs.copySync(sourceConfigPath, targetConfigPath);\n    updatingMetroConfigStep.succeed('Added Metro bundler configuration.');\n  } catch (e) {\n    updatingMetroConfigStep.stopAndPersist({\n      symbol: '⚠️ ',\n      text: chalk.yellow('Metro bundler configuration not applied:'),\n    });\n    log.nested(`\\u203A ${e.message}`);\n    log.nested(\n      `\\u203A You will need to add the ${chalk.bold(\n        'hashAssetFiles'\n      )} plugin to your Metro configuration.\\n  ${log.chalk.dim(\n        learnMore('https://docs.expo.io/bare/installing-updates/')\n      )}`\n    );\n    log.newLine();\n  }\n}\n\nasync function validateBareTemplateExistsAsync(sdkVersion: string): Promise<npmPackageArg.Result> {\n  // Validate that the template exists\n  const sdkMajorVersionNumber = semver.major(sdkVersion);\n  const templateSpec = npmPackageArg(`expo-template-bare-minimum@sdk-${sdkMajorVersionNumber}`);\n  try {\n    await pacote.manifest(templateSpec);\n  } catch (e) {\n    if (e.code === 'E404') {\n      throw new Error(\n        `Unable to eject because an eject template for SDK ${sdkMajorVersionNumber} was not found.`\n      );\n    } else {\n      throw e;\n    }\n  }\n\n  return templateSpec;\n}\n\ntype DependenciesModificationResults = {\n  hasNewDependencies: boolean;\n  hasNewDevDependencies: boolean;\n};\n\nfunction getPackageJson(projectRoot: string): JSONObject {\n  return JsonFile.read(path.join(projectRoot, 'package.json'));\n}\n\n/**\n * Update package.json scripts - `npm start` should default to `react-native\n * start` rather than `expo start` after ejecting, for example.\n */\nfunction updatePackageJSONScripts({ pkg }: { pkg: PackageJSONConfig }) {\n  if (!pkg.scripts) {\n    pkg.scripts = {};\n  }\n  pkg.scripts.start = 'react-native start';\n  pkg.scripts.ios = 'react-native run-ios';\n  pkg.scripts.android = 'react-native run-android';\n}\n\n/**\n * Add new app entry points\n */\nfunction updatePackageJSONEntryPoint({ pkg }: { pkg: PackageJSONConfig }): boolean {\n  let removedPkgMain = false;\n  // Check that the pkg.main doesn't match:\n  // - ./node_modules/expo/AppEntry\n  // - ./node_modules/expo/AppEntry.js\n  // - node_modules/expo/AppEntry.js\n  // - expo/AppEntry.js\n  // - expo/AppEntry\n  if (shouldDeleteMainField(pkg.main)) {\n    // Save the custom\n    removedPkgMain = pkg.main;\n    delete pkg.main;\n  }\n\n  return removedPkgMain;\n}\n\n/**\n * Update package.json dependencies by combining the dependencies in the project we are ejecting\n * with the dependencies in the template project. Does the same for devDependencies.\n *\n * - The template may have some dependencies beyond react/react-native/react-native-unimodules,\n *   for example RNGH and Reanimated. We should prefer the version that is already being used\n *   in the project for those, but swap the react/react-native/react-native-unimodules versions\n *   with the ones in the template.\n * - The same applies to expo-updates -- since some native project configuration may depend on the\n *   version, we should always use the version of expo-updates in the template.\n */\nfunction updatePackageJSONDependencies({\n  tempDir,\n  pkg,\n}: {\n  tempDir: string;\n  pkg: PackageJSONConfig;\n}): DependenciesModificationResults {\n  if (!pkg.devDependencies) {\n    pkg.devDependencies = {};\n  }\n  const { dependencies, devDependencies } = getPackageJson(tempDir);\n  const defaultDependencies = createDependenciesMap(dependencies);\n  const defaultDevDependencies = createDependenciesMap(devDependencies);\n\n  const combinedDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDependencies,\n    ...pkg.dependencies,\n  });\n\n  const requiredDependencies = ['react', 'react-native-unimodules', 'react-native', 'expo-updates'];\n\n  for (const dependenciesKey of requiredDependencies) {\n    // Only overwrite the react-native version if it's an Expo fork.\n    if (dependenciesKey === 'react-native' && pkg.dependencies?.[dependenciesKey]) {\n      const dependencyVersion = pkg.dependencies[dependenciesKey];\n      if (!dependencyVersion.includes('github.com/expo/react-native')) {\n        continue;\n      }\n    }\n    combinedDependencies[dependenciesKey] = defaultDependencies[dependenciesKey];\n  }\n  const combinedDevDependencies: DependenciesMap = createDependenciesMap({\n    ...defaultDevDependencies,\n    ...pkg.devDependencies,\n  });\n\n  // Only change the dependencies if the normalized hash changes, this helps to reduce meaningless changes.\n  const hasNewDependencies =\n    hashForDependencyMap(pkg.dependencies) !== hashForDependencyMap(combinedDependencies);\n  const hasNewDevDependencies =\n    hashForDependencyMap(pkg.devDependencies) !== hashForDependencyMap(combinedDevDependencies);\n  // Save the dependencies\n  if (hasNewDependencies) {\n    // Use Object.assign to preserve the original order of dependencies, this makes it easier to see what changed in the git diff.\n    pkg.dependencies = Object.assign(pkg.dependencies, combinedDependencies);\n  }\n  if (hasNewDevDependencies) {\n    // Same as with dependencies\n    pkg.devDependencies = Object.assign(pkg.devDependencies, combinedDevDependencies);\n  }\n\n  return {\n    hasNewDependencies,\n    hasNewDevDependencies,\n  };\n}\n\nasync function updatePackageJSONAsync({\n  projectRoot,\n  tempDir,\n  pkg,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  pkg: PackageJSONConfig;\n}): Promise<DependenciesModificationResults> {\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const updatingPackageJsonStep = CreateApp.logNewSection(\n    'Updating your package.json scripts, dependencies, and main file'\n  );\n\n  updatePackageJSONScripts({ pkg });\n\n  const results = updatePackageJSONDependencies({ pkg, tempDir });\n\n  const removedPkgMain = updatePackageJSONEntryPoint({ pkg });\n  await fs.writeFile(path.resolve(projectRoot, 'package.json'), JSON.stringify(pkg, null, 2));\n\n  updatingPackageJsonStep.succeed(\n    'Updated package.json and added index.js entry point for iOS and Android.'\n  );\n  if (removedPkgMain) {\n    log(\n      `\\u203A Removed ${chalk.bold(\n        `\"main\": \"${removedPkgMain}\"`\n      )} from package.json because we recommend using index.js as main instead.`\n    );\n    log.newLine();\n  }\n\n  return results;\n}\n\nexport function resolveBareEntryFile(projectRoot: string, main: any) {\n  // expo app entry is not needed for bare projects.\n  if (isPkgMainExpoAppEntry(main)) return null;\n  // Look at the `package.json`s `main` field for the main file.\n  const resolvedMainField = main ?? './index';\n  // Get a list of possible extensions for the main file.\n  const extensions = getBareExtensions(['ios', 'android']);\n  // Testing the main field against all of the provided extensions - for legacy reasons we can't use node module resolution as the package.json allows you to pass in a file without a relative path and expect it as a relative path.\n  return getFileWithExtensions(projectRoot, resolvedMainField, extensions);\n}\n\nexport function shouldDeleteMainField(main?: any): boolean {\n  if (!main || !isPkgMainExpoAppEntry(main)) {\n    return false;\n  }\n\n  return !main?.startsWith('index.');\n}\n\nfunction normalizeDependencyMap(deps: DependenciesMap): string[] {\n  return Object.keys(deps)\n    .map(dependency => `${dependency}@${deps[dependency]}`)\n    .sort();\n}\n\nexport function hashForDependencyMap(deps: DependenciesMap): string {\n  const depsList = normalizeDependencyMap(deps);\n  const depsString = depsList.join('\\n');\n  return createFileHash(depsString);\n}\n\nexport function getTargetPaths(\n  projectRoot: string,\n  pkg: PackageJSONConfig,\n  platforms: ModPlatform[]\n) {\n  const targetPaths: string[] = [...platforms];\n\n  const bareEntryFile = resolveBareEntryFile(projectRoot, pkg.main);\n  // Only create index.js if we cannot resolve the existing entry point (after replacing the expo entry).\n  if (!bareEntryFile) {\n    targetPaths.push('index.js');\n  }\n\n  return targetPaths;\n}\n\n/**\n * Extract the template and copy the ios and android directories over to the project directory.\n *\n * @param force should create native projects even if they already exist.\n * @return `true` if any project files were created.\n */\nasync function cloneNativeDirectoriesAsync({\n  projectRoot,\n  tempDir,\n  exp,\n  pkg,\n  platforms,\n}: {\n  projectRoot: string;\n  tempDir: string;\n  exp: Pick<ExpoConfig, 'name' | 'sdkVersion'>;\n  pkg: PackageJSONConfig;\n  platforms: ModPlatform[];\n}): Promise<string[]> {\n  const templateSpec = await validateBareTemplateExistsAsync(exp.sdkVersion!);\n\n  // NOTE(brentvatne): Removing spaces between steps for now, add back when\n  // there is some additional context for steps\n  const creatingNativeProjectStep = CreateApp.logNewSection(\n    'Creating native project directories (./ios and ./android) and updating .gitignore'\n  );\n\n  const targetPaths = getTargetPaths(projectRoot, pkg, platforms);\n\n  let copiedPaths: string[] = [];\n  let skippedPaths: string[] = [];\n  try {\n    await Exp.extractTemplateAppAsync(templateSpec, tempDir, exp);\n    [copiedPaths, skippedPaths] = copyPathsFromTemplate(projectRoot, tempDir, targetPaths);\n    const results = GitIgnore.mergeGitIgnorePaths(\n      path.join(projectRoot, '.gitignore'),\n      path.join(tempDir, '.gitignore')\n    );\n\n    let message = `Created native project${platforms.length > 1 ? 's' : ''}`;\n\n    if (skippedPaths.length) {\n      message += log.chalk.dim(\n        ` | ${skippedPaths.map(path => log.chalk.bold(`/${path}`)).join(', ')} already created`\n      );\n    }\n    if (!results?.didMerge) {\n      message += log.chalk.dim(` | gitignore already synced`);\n    } else if (results.didMerge && results.didClear) {\n      message += log.chalk.dim(` | synced gitignore`);\n    }\n    creatingNativeProjectStep.succeed(message);\n  } catch (e) {\n    log.error(e.message);\n    creatingNativeProjectStep.fail(\n      'Failed to create the native project - see the output above for more information.'\n    );\n    log(\n      chalk.yellow(\n        'You may want to delete the `./ios` and/or `./android` directories before running eject again.'\n      )\n    );\n    throw new SilentError(e);\n  }\n\n  return copiedPaths;\n}\n\n/**\n *\n * @param projectRoot\n * @param tempDir\n *\n * @return `true` if the project is ejecting, and `false` if it's syncing.\n */\nasync function createNativeProjectsFromTemplateAsync({\n  projectRoot,\n  exp,\n  pkg,\n  tempDir,\n  platforms,\n}: {\n  projectRoot: string;\n  exp: ExpoConfig;\n  pkg: PackageJSONConfig;\n  tempDir: string;\n  platforms: ModPlatform[];\n}): Promise<\n  { hasNewProjectFiles: boolean; needsPodInstall: boolean } & DependenciesModificationResults\n> {\n  const copiedPaths = await cloneNativeDirectoriesAsync({\n    projectRoot,\n    tempDir,\n    exp,\n    pkg,\n    platforms,\n  });\n\n  writeMetroConfig({ projectRoot, pkg, tempDir });\n\n  const depsResults = await updatePackageJSONAsync({ projectRoot, tempDir, pkg });\n\n  return {\n    hasNewProjectFiles: !!copiedPaths.length,\n    // If the iOS folder changes or new packages are added, we should rerun pod install.\n    needsPodInstall:\n      copiedPaths.includes('ios') ||\n      depsResults.hasNewDependencies ||\n      depsResults.hasNewDevDependencies,\n    ...depsResults,\n  };\n}\n\n/**\n * Create an object of type DependenciesMap a dependencies object or throw if not valid.\n *\n * @param dependencies - ideally an object of type {[key]: string} - if not then this will error.\n */\nfunction createDependenciesMap(dependencies: any): DependenciesMap {\n  if (typeof dependencies !== 'object') {\n    throw new Error(`Dependency map is invalid, expected object but got ${typeof dependencies}`);\n  } else if (!dependencies) {\n    return {};\n  }\n\n  const outputMap: DependenciesMap = {};\n\n  for (const key of Object.keys(dependencies)) {\n    const value = dependencies[key];\n    if (typeof value === 'string') {\n      outputMap[key] = value;\n    } else {\n      throw new Error(\n        `Dependency for key \\`${key}\\` should be a \\`string\\`, instead got: \\`{ ${key}: ${JSON.stringify(\n          value\n        )} }\\``\n      );\n    }\n  }\n  return outputMap;\n}\n\n/**\n * Some packages are not configured automatically on eject and may require\n * users to add some code, eg: to their AppDelegate.\n */\nasync function warnIfDependenciesRequireAdditionalSetupAsync(\n  pkg: PackageJSONConfig,\n  sdkVersion?: string,\n  appliedPlugins?: string[]\n): Promise<void> {\n  // TODO: Remove based on plugin history\n  const expoPackagesWithExtraSetup = expoManagedPlugins\n    .filter(plugin => !appliedPlugins?.includes(plugin))\n    .reduce(\n      (prev, curr) => ({\n        ...prev,\n        [curr]: `https://github.com/expo/expo/tree/master/packages/${curr}`,\n      }),\n      {}\n    );\n  const pkgsWithExtraSetup: Record<string, string> = {\n    ...expoPackagesWithExtraSetup,\n  };\n\n  // Starting with SDK 40 the manifest is embedded in ejected apps automatically\n  if (sdkVersion && semver.lte(sdkVersion, '39.0.0')) {\n    pkgsWithExtraSetup['expo-constants'] = `${chalk.bold(\n      'Constants.manifest'\n    )} is not available in the bare workflow. You should replace it with ${chalk.bold(\n      'Updates.manifest'\n    )}. ${log.chalk.dim(\n      learnMore('https://docs.expo.io/versions/latest/sdk/updates/#updatesmanifest')\n    )}`;\n  }\n\n  const packagesToWarn: string[] = Object.keys(pkg.dependencies).filter(\n    pkgName => pkgName in pkgsWithExtraSetup\n  );\n\n  if (packagesToWarn.length === 0) {\n    return;\n  }\n\n  log.newLine();\n  const warnAdditionalSetupStep = CreateApp.logNewSection(\n    'Checking if any additional setup steps are required for installed SDK packages.'\n  );\n\n  const plural = packagesToWarn.length > 1;\n\n  warnAdditionalSetupStep.stopAndPersist({\n    symbol: '⚠️ ',\n    text: chalk.yellow.bold(\n      `The app has ${packagesToWarn.length} package${plural ? 's' : ''} that require${\n        plural ? '' : 's'\n      } extra setup before building:`\n    ),\n  });\n\n  packagesToWarn.forEach(pkgName => {\n    log.nested(`\\u203A ${chalk.bold(pkgName)}: ${pkgsWithExtraSetup[pkgName]}`);\n  });\n}\n\nexport function stripDashes(s: string): string {\n  return s.replace(/\\s|-/g, '');\n}\n\n/**\n * Returns true if the input string matches the default expo main field.\n *\n * - ./node_modules/expo/AppEntry\n * - ./node_modules/expo/AppEntry.js\n * - node_modules/expo/AppEntry.js\n * - expo/AppEntry.js\n * - expo/AppEntry\n *\n * @param input package.json main field\n */\nexport function isPkgMainExpoAppEntry(input?: string): boolean {\n  const main = input || '';\n  if (main.startsWith('./')) {\n    return main.includes('node_modules/expo/AppEntry');\n  }\n  return main.includes('expo/AppEntry');\n}\n"],"file":"Eject.js"}